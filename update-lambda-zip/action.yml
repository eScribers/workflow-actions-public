name: "Update lambda code "
description: "update lambda code file"
inputs:
  git-reference:
    description: 'Git reference from where it should be deployed'
    default: "refs/heads/master"
  git-repository:
    description: 'Repository for lambda function'
    required: true
  token:
    description: 'Token to github'
    required: true
  lambda-function-name:
    description: 'Name for lambda function stack'
    required: true
  # lambda-stack-name:
  #   description: 'Name for lambda function stack'
  #   required: true
  aws-region:
    description: 'AWS Default Region'
    default: "us-east-1"
  aws-access-key:
    description: 'AWS Access Key from secrets'
    required: true
  aws-secret-key:
    description: 'AWS Secret Key from secrets'
    required: true

runs:
  using: "composite"
  steps: 
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.git-repository }}
        ref: ${{ inputs.git-reference }}
        token: ${{ inputs.token }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ inputs.aws-access-key }}
        aws-secret-access-key: ${{ inputs.aws-secret-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install AWS CLI
      run: |
        pip install --upgrade pip
        pip install awscli
      shell: bash

    - name: DEBUG
      run: |
        ls -l
      shell: bash

    - name: get stack name
      run: echo "STACK_NAME=$(grep  stack_name samconfig.toml |  awk -F '=' '{print $2}' | tr -d ' ' | tr -d '\"')" >> $GITHUB_ENV
      shell: bash

    - name: Get Lambda Function Name
      run: echo "FUNCTION_NAME=$(sam list stack-outputs --config-file samconfig.toml --stack-name ${{ env.STACK_NAME }} --output json | jq '.[] | select(.OutputKey=="${{ inputs.lambda-function-name }}") | .OutputValue' | tr -d '\"')" >> $GITHUB_ENV
      shell: bash

    - name: Download lambda function
      run: |
        aws lambda get-function --function-name ${{ env.FUNCTION_NAME }} --query 'Code.Location'
        echo "========="
        wget -O myfunction.zip "$(aws lambda get-function --function-name ${{ env.FUNCTION_NAME }} --query 'Code.Location' | tr -d '"')"
        zip -r myfunction.zip $(grep CodeUri template.yaml | awk -F ':' '{print $2}' | tr -d ' ' | tr -d '//')/app.py
      shell: bash

    - name: Update lambda
      run: |
        aws lambda update-function-code --function-name ${{ env.FUNCTION_NAME }} --zip-file fileb://myfunction.zip

    - name: LS
      run: |
        ls -l
      shell: bash
